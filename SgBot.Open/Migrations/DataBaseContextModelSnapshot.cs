// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SgBot.Open.DataTypes.BotFunction;

#nullable disable

namespace SgBot.Open.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("SgBot.Open.DataTypes.BotFunction.CollectedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetuCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SvCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YydzCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CollectedDatas");
                });

            modelBuilder.Entity("SgBot.Open.DataTypes.BotFunction.GroupInfo", b =>
                {
                    b.Property<string>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CanGame")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanManage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanSetu")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanShortCommand")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanYydz")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionMark")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepeatFrequency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetuR18Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SgBot.Open.DataTypes.BotFunction.UserInfo", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeedTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Permission")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Token")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SgBot.Open.DataTypes.SgGame.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<long>("Agility")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BagString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BuyPowerTime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Coin")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Fitness")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FreePoints")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHitBoss")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PowerDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RankScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillActiveString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillHaveString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitleString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
